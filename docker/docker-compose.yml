name: flask_sample

services:
  app:
    build:
      context: ./../
      dockerfile: ./Dockerfile
    volumes:
      # ホストマシンのディレクトリとコンテナ内のディレクトリを同期
      - ./../:/usr/src/flask_sample
    ports: 
      - "5000:5000"

  postgres_db:
    image: postgres:latest
    ports: 
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=flask_sample
    volumes:
      - db-store:/var/lib/postgressql/data

  dynamodb-local:
    image: amazon/dynamodb-local:latest
    user: root
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath /data
    volumes:
      - ./dynamodb_data:/data
    ports:
      - 8000:8000

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin:latest
    environment:
      - DYNAMO_ENDPOINT=dynamodb-local:8000
    ports:
      - 8001:8001
    depends_on:
      - dynamodb-local

  minio:
    image: quay.io/minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server --console-address ":9001" /data
    ports:
      - 9000:9000
      - 9001:9001
  
  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ./ollama_data:/root/.ollama
    #   # GPUを使用する場合
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - capabilities: [gpu]

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    ports:
      - "3000:8080"
    volumes:
      - open_webui_data:/app/backend/data
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - ollama

volumes:
  db-store:
  ollama-data:
  open_webui_data: